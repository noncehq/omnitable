import*as e from"await-to-js";let a=a=>({async query(t){let{config:i,sort_params:s,time_dimensions:r=[],filter_relation:l,filter_params:n,page:o,pagesize:m}=t,d=[],u=[],f=[];r.forEach(e=>{let a=i.fields.table?.[e.dimension]||i.fields.common?.[e.dimension];f.push({dimension:a.bind,granularity:e.granularity,dateRange:e.date_range})}),i.table.columns.forEach(e=>{let a=i.fields.table?.[e.name]||i.fields.common?.[e.name];!a.bind.startsWith("_")&&(e.measure?d.push(a.bind):f.find(e=>e.dimension===a.bind)||u.push(a.bind))});let b=s.map(e=>[e.field,e.order],[]),p=[{[l]:n.map(e=>{let a={};return a.member=e.field,a.operator=e.expression,a.values=Array.isArray(e.value)?e.value:[e.value],a})}],[c,g]=await (0,e.default)(a.load({measures:d,dimensions:u,order:b,timeDimensions:f,filters:p,offset:(o-1)*m,limit:m,total:!0}));return c?{error:c,message:c?.message}:{data:{items:g.rawData(),total:g.totalRows()}}}});export{a as default};